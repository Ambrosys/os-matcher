
.. _program_listing_file_src_AppComponents_Common_Filter_Routing_PiecewiseRouter.h:

Program Listing for File PiecewiseRouter.h
==========================================

|exhale_lsh| :ref:`Return to documentation for file <file_src_AppComponents_Common_Filter_Routing_PiecewiseRouter.h>` (``src/AppComponents/Common/Filter/Routing/PiecewiseRouter.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /*
    * SPDX-FileCopyrightText: Â© 2018 Ambrosys GmbH
    *
    * SPDX-FileContributor: Fabian Sandoval Saldias <fabianvss@gmail.com>
    *
    * SPDX-License-Identifier: Apache-2.0
    */
   
   #pragma once
   
   #include <AppComponents/Common/Types/Routing/Edge.h>
   #include <AppComponents/Common/Types/Routing/SamplingPoint.h>
   #include <AppComponents/Common/Types/Routing/Statistic.h>
   #include <AppComponents/Common/Types/Track/Time.h>  // TODO: only for debugging
   
   namespace AppComponents::Common::Filter::Routing {
   
   class SkipRouter;
   
   class PiecewiseRouter
   {
   public:
       PiecewiseRouter(SkipRouter const & router, Types::Routing::SamplingPointList const &, Types::Track::TimeList const &);
       bool operator()(Types::Routing::RouteList &, Types::Routing::RoutingStatistic &);
   
   private:
       SkipRouter const & router_;
       Types::Routing::SamplingPointList const & samplingPointList_;
       Types::Track::TimeList const & timeList_;  // TODO: only for debugging
   };
   
   }  // namespace AppComponents::Common::Filter::Routing
