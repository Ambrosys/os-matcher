
.. _program_listing_file_src_AppComponents_Common_Filter_SamplingPointFinder.h:

Program Listing for File SamplingPointFinder.h
==============================================

|exhale_lsh| :ref:`Return to documentation for file <file_src_AppComponents_Common_Filter_SamplingPointFinder.h>` (``src/AppComponents/Common/Filter/SamplingPointFinder.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /*
    * SPDX-FileCopyrightText: Â© 2018 Ambrosys GmbH
    *
    * SPDX-FileContributor: Fabian Sandoval Saldias <fabianvss@gmail.com>
    *
    * SPDX-License-Identifier: Apache-2.0
    */
   
   #pragma once
   
   #include <AppComponents/Common/Types/Routing/SamplingPoint.h>
   #include <AppComponents/Common/Types/Street/Segment.h>
   #include <AppComponents/Common/Types/Street/TravelDirection.h>
   #include <AppComponents/Common/Types/Track/Heading.h>
   #include <AppComponents/Common/Types/Track/Point.h>
   
   #include <ambpipeline/Filter.h>
   
   namespace AppComponents::Common::Filter {
   
   class SamplingPointFinder : public ambpipeline::Filter
   {
   public:
       enum class SelectionStrategy { all, best, singles };
       SamplingPointFinder(SelectionStrategy selectionStrategy, double searchRadius, double maxHeadingDifference);
       bool operator()(
           Types::Track::PointList const &,
           Types::Track::HeadingList const &,
           Types::Street::SegmentList const &,
           Types::Street::TravelDirectionList const &,
           Types::Routing::SamplingPointList &);
   
   private:
       SelectionStrategy const selectionStrategy_;
       double const searchRadius_;
       double const maxHeadingDifference_;
   };
   
   }  // namespace AppComponents::Common::Filter
