
.. _program_listing_file_src_Generic_Hash_MakeHashable.h:

Program Listing for File MakeHashable.h
=======================================

|exhale_lsh| :ref:`Return to documentation for file <file_src_Generic_Hash_MakeHashable.h>` (``src/Generic/Hash/MakeHashable.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /*
    * SPDX-FileCopyrightText: Â© 2018 Ambrosys GmbH
    *
    * SPDX-License-Identifier: Apache-2.0
    */
   
   #pragma once
   
   #include <functional>
   
   // https://stackoverflow.com/questions/2590677/how-do-i-combine-hash-values-in-c0x
   
   namespace {
   
   inline void hash_combine(std::size_t &)
   {
   }
   
   template <typename T, typename... Rest>
   inline void hash_combine(std::size_t & seed, const T & v, Rest... rest)
   {
       std::hash<T> hasher;
       seed ^= hasher(v) + 0x9e3779b9 + (seed << 6) + (seed >> 2);
       hash_combine(seed, rest...);
   }
   
   }  // namespace
   
   #define MAKE_HASHABLE(type, ...)                         \
       namespace std {                                      \
           template <>                                      \
           struct hash<type>                                \
           {                                                \
               std::size_t operator()(const type & t) const \
               {                                            \
                   std::size_t ret = 0;                     \
                   hash_combine(ret, __VA_ARGS__);          \
                   return ret;                              \
               }                                            \
           };                                               \
       }
