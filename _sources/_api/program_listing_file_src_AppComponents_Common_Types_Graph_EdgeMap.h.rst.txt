
.. _program_listing_file_src_AppComponents_Common_Types_Graph_EdgeMap.h:

Program Listing for File EdgeMap.h
==================================

|exhale_lsh| :ref:`Return to documentation for file <file_src_AppComponents_Common_Types_Graph_EdgeMap.h>` (``src/AppComponents/Common/Types/Graph/EdgeMap.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #pragma once
   
   #include <Core/Graph/Graph.h>
   
   #include <cstddef>
   #include <optional>
   #include <unordered_map>
   
   namespace AppComponents::Common::Types::Graph {
   
   struct StreetEdge
   {
       size_t streetIndex;
       bool forwards;
   };
   
   using GraphTriple = std::tuple<Core::Graph::Node, Core::Graph::Edge, Core::Graph::Node>;
   
   struct GraphTriplePair
   {
       std::optional<GraphTriple> forwards;
       std::optional<GraphTriple> backwards;
   };
   
   using GraphEdgeMap = std::unordered_map<Core::Graph::Edge, StreetEdge>;
   using StreetIndexMap = std::unordered_map<size_t, GraphTriplePair>;
   using NodeMap = std::unordered_map<Core::Graph::Node, size_t>;
   
   }  // namespace AppComponents::Common::Types::Graph
